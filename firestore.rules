rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isMember() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/members/$(request.auth.uid)).data.role == 'member';
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isValidNewMember() {
      let memberData = request.resource.data;
      return 
        memberData.role == 'member' &&  // New users can only be members
        memberData.status == 'pending' && // Must start as pending
        memberData.full_name is string &&
        memberData.email is string &&
        memberData.phone is string;
    }

    // Members collection
    match /members/{userId} {
      allow read: if isSignedIn();
      // Allow members to create their own document with restricted role
      allow create: if isOwner(userId) && isValidNewMember();
      // Allow members to update their own basic info, but not role or status
      allow update: if isAdmin() || (
        isOwner(userId) && 
        !request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['role', 'status'])
      );
      allow delete: if isAdmin();
    }

		 // Deletion requests collection
    match /deletion_requests/{requestId} {
      allow read: if isAdmin();
      allow create: if isAdmin() && 
        request.resource.data.keys().hasAll(['member_id', 'requested_by', 'requested_at']) &&
        request.resource.data.requested_by == request.auth.uid;
      allow delete: if isAdmin();
    }

    // Contributions collection
    match /contributions/{contributionId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && 
        (isAdmin() || (isMember() && request.resource.data.member_id == request.auth.uid));
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Payouts collection
    match /payouts/{payoutId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Archived contributions collection
    match /archived_contributions/{archivedId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
      // Analytics collection
    match /analytics/{docId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}