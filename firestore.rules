rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        firestore.exists(/databases/(default)/documents/members/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isMember() {
      return isSignedIn() && 
        firestore.exists(/databases/(default)/documents/members/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/members/$(request.auth.uid)).data.role == 'member';
    }

    // Dependants documents folder
    match /dependants/{userId}/{fileName} {
      // Allow read for authenticated users
      allow read: if isSignedIn();
      
      // Allow upload for own dependants only
      allow create, update: if isSignedIn() &&
        // Only allow PDF or image files
        (request.resource.contentType.matches('application/pdf') ||
         request.resource.contentType.matches('image/.*')) &&
        // Limit file size to 5MB
        request.resource.size <= 5 * 1024 * 1024 &&
        // Ensure user can only modify their own dependants folder
        userId == request.auth.uid;
      
      // Allow users to delete their own dependant documents
      allow delete: if isSignedIn() && userId == request.auth.uid;
    }

    // ... keep existing rules for other folders ...
  }
}